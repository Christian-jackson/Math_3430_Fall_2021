import pytest
import QR


test_matrix_01 = [[1, 2], [3, 4]]
test_matrix_02 = [[2, 4], [6, 8]]
test_matrix_03 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
x = 5
y = 3 + 2j
z = -4
a = 2
v_1 = [2, 3, 4]
v_2 = [7, 8, 9] 
v_3 = [5, 3, 10]

# def test_UGS():
#     assert QR.UGS(test_matrix_01) == [[[0.4472135954999579, 0.8944271909999159], [0.8944271909999162, -0.4472135954999574]], 
#                                       [[2.23606797749979, 0.0], [4.919349550499537, 0.8944271909999159]]]
#     assert QR.UGS(test_matrix_02) == [[[0.4472135954999579, 0.8944271909999159], 
#                                    [0.8944271909999162, -0.4472135954999574]], 
#                                    [[4.47213595499958, 0.0], 
#                                    [9.838699100999074, 1.7888543819998317]]]

def test_sgs():
    assert QR.SGS(test_matrix_01) == [[[0.4472135954999579, 0.8944271909999159], [0.8944271909999162, -0.4472135954999574]], 
                                      [[2.23606797749979, 0.0], [4.919349550499537, 0.8944271909999159]]]
    assert QR.SGS(test_matrix_02) == [[[0.4472135954999579, 0.8944271909999159], [0.8944271909999162, -0.4472135954999574]], 
                                      [[4.47213595499958, 0.0], [9.838699100999074, 1.7888543819998317]]]

def test_orthonorm():
    assert QR.orthonorm(test_matrix_01) == [[[0.4472135954999579, 0.8944271909999159], [0.8944271909999162, -0.4472135954999574]]]
    assert QR.orthonorm(test_matrix_02) == [[[0.4472135954999579, 0.8944271909999159], [0.8944271909999162, -0.4472135954999574]]]

def test_conjugate():
    assert QR.conjugate(x) == (5)
    assert QR.conjugate(y) == (3 - 2j)

def test_con_trans():
    assert QR.con_trans(test_matrix_01) == [[(1+0j), (3+0j)], [(2+0j), (4+0j)]]
    assert QR.con_trans(test_matrix_03) == [[(1+0j), (4+0j), (7+0j)], [(2+0j), (5+0j), (8+0j)], [(3+0j), (6+0j), (9+0j)]]

def test_deep_copy():
    assert QR.deep_copy(test_matrix_01) == [[1,2],[3,4]]
    assert QR.deep_copy(test_matrix_03) == [[1,2,3],[4,5,6],[7,8,9]]

def test_sign():
    assert QR.sign(x) == 1
    assert QR.sign(z) == -1

def test_V_builder():
    assert QR.V_builder(v_1) == [7.385164807134504, 3.0, 4.0]
    assert QR.V_builder(v_2) == [20.92838827718412, 8.0, 9.0]

def test_identity_matrix():
    assert QR.identity_matrix(x) == [[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 0], [0, 0, 0, 0, 1]]
    assert QR.identity_matrix(a) == [[1, 0], [0, 1]]

def test_vec_vec_multi():
    assert QR.vec_vec_multi(v_1, v_2) == [[14, 21, 28], [16, 24, 32], [18, 27, 36]]
    assert QR.vec_vec_multi(v_1, v_3) == [[10, 15, 20], [6, 9, 12], [20, 30, 40]]

def test_F_builder():
    assert QR.F_builder(v_1) == [[0.7241379310344827, -0.4137931034482759, -0.5517241379310346], 
                              [-0.4137931034482759, 0.3793103448275861, -0.8275862068965518], 
                              [-0.5517241379310346, -0.8275862068965518, -0.10344827586206917]]
    assert QR.F_builder(v_2) == [[0.4948453608247423, -0.5773195876288659, -0.6494845360824743], 
                                 [-0.5773195876288659, 0.3402061855670103, -0.7422680412371134], 
                                 [-0.6494845360824743, -0.7422680412371134, 0.1649484536082474]]

def test_Q_builder():
    assert QR.Q_builder(test_matrix_01, 1) == [[1, 0], [0, -1]]
    assert QR.Q_builder(test_matrix_03, 2) == [[1, 0, 0], [0, 1, 0], [0, 0, -1]]

def test_householder():
    assert QR.Householder(test_matrix_03) == [[[(-0.2672612419124245), (-0.5345224838248489), (-0.8017837257372733)], 
                                               [(0.8728715609439699), (0.21821789023599203), (-0.43643578047198434)], 
                                               [(-0.4082482904638626), (0.816496580927726), (-0.40824829046386335)]], 
                                              [[-3.741657386773942, 7.251946429389432e-16, -3.3917873657517295e-16], 
                                               [-8.552359741197582, 1.9639610121239335, 5.551115123125783e-17], 
                                               [-13.363062095621222, 3.927922024247865, 5.551115123125783e-16]]]
    assert QR.Householder(test_matrix_01) ==[[[(-0.4472135954999581), (-0.894427190999916)], 
                                              [(0.8944271909999157), (-0.44721359549995776)]], 
                                             [[-2.23606797749979, 2.2204460492503126e-16], 
                                              [-4.919349550499538, 0.8944271909999164]]]